<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>