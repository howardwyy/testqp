<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbox_inwarehouse.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOkRENzRDMzA3MDkyMDY4MTFBNEUwRDNEMjZENTIx
        ODNDIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkVGQjY4NDMyRkI2OTExRTA5NkU1QTFCQzBCRkFC
        RUI4IiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkVGQjY4NDMxRkI2OTExRTA5NkU1QTFCQzBCRkFC
        RUI4IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyI+IDx4bXBNTTpE
        ZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjdCQ0MxN0VCNzg4Q0UwMTE5OTE3QkYz
        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
</value>
  </data>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
  <metadata name="$this.Skin" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>